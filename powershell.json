{
	"Blank function": {
		"prefix": "function-custom",
		"body": [
		  "function Verb-Noun {",
		  "    <#",
		  "    .SYNOPSIS",
		  "        Lorem ipsum",
		  "    .DESCRIPTION",
		  "        Lorem ipsum",
		  "    .EXAMPLE",
		  "        Lorem ipsum",
		  "    #>",
		  "    [CmdletBinding()]",
		  "    param (",
		  "        [Parameter(Mandatory = \\$false, ValueFromPipelineByPropertyName = \\$true)]",
		  "        [Alias()]",
		  "        [ValidateNotNullOrEmpty()]",
		  "        [String]",
		  "        \\$String,",
		  "",
		  "        [Parameter(Mandatory = \\$false)]",
		  "        [Switch]",
		  "        \\$MeasureTime",
		  "    )",
		  "    begin {",
		  "        \\$ErrorActionPreference = 'Stop'",
		  "        if (\\$MeasureTime) {",
		  "            \\$FuncStartTime = Get-Date",
		  "            Write-Verbose -Message \"Function start time: \\$(Get-Date -Date \\$FuncStartTime -Format FileDateTimeUniversal)\"",
		  "        }",
		  "    }",
		  "    process {",
		  "        try {",
		  "",
		  "        }",
		  "        catch {",
		  "            Write-Error -Message \\$_.Exception.Message",
		  "        }",
		  "        finally {",
		  "            if (\\$MeasureTime) {",
		  "                \\$ItemEndTime = Get-Date",
		  "                Write-Verbose -Message \"Item run time: \\$((New-TimeSpan -Start \\$FuncStartTime -End \\$ItemEndTime).TotalSeconds) seconds\"",
		  "            }",
		  "        }",
		  "    }",
		  "    end {",
		  "        if (\\$MeasureTime) {",
		  "            \\$FuncEndTime = Get-Date",
		  "            Write-Verbose -Message \"Function run time: \\$((New-TimeSpan -Start \\$FuncStartTime -End \\$FuncEndTime).TotalSeconds) seconds\"",
		  "            Write-Verbose -Message \"Function end time: \\$(Get-Date -Date \\$FuncEndTime -Format FileDateTimeUniversal)\"",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "Blank function"
	},

	"Blank function temporary directory": {
		"prefix": "function-customtempdir",
		"body": [
		  "function Verb-Noun {",
		  "    <#",
		  "    .SYNOPSIS",
		  "        Lorem ipsum",
		  "    .DESCRIPTION",
		  "        Lorem ipsum",
		  "    .EXAMPLE",
		  "        Lorem ipsum",
		  "    #>",
		  "    [CmdletBinding()]",
		  "    param (",
		  "        [Parameter(Mandatory = \\$false, ValueFromPipelineByPropertyName = \\$true)]",
		  "        [Alias()]",
		  "        [ValidateNotNullOrEmpty()]",
		  "        [String]",
		  "        \\$UserPrincipalName,",
		  "",
		  "        [Parameter(Mandatory = \\$false)]",
		  "        [Switch]",
		  "        \\$MeasureTime",
		  "    )",
		  "    begin {",
		  "        \\$ErrorActionPreference = 'Stop'",
		  "        if (\\$MeasureTime) {",
		  "            \\$FuncStartTime = Get-Date",
		  "            Write-Verbose -Message \"Function start time: \\$(Get-Date -Date \\$FuncStartTime -Format FileDateTimeUniversal)\"",
		  "        }",
		  "    }",
		  "    process {",
		  "        try {",
		  "            \\$TempPath = [IO.Path]::GetTempPath().ToString()",
		  "            \\$TempGuid = [System.Guid]::NewGuid().ToString()",
		  "            \\$TempDir = New-Item -Type Directory -Path \\$TempPath -Name \\$TempGuid",
		  "            \\$TempDir = \\$TempDir | Select-Object -ExpandProperty FullName",
		  "        }",
		  "        catch {",
		  "            Write-Error -Message \\$_.Exception.Message",
		  "        }",
		  "        finally {",
		  "            Remove-Item -Path \\$TempDir -Recurse -Force",
		  "            \\$Error.Clear()",
		  "            if (\\$MeasureTime) {",
		  "                \\$ItemEndTime = Get-Date",
		  "                Write-Verbose -Message \"Item run time: \\$((New-TimeSpan -Start \\$FuncStartTime -End \\$ItemEndTime).TotalSeconds) seconds\"",
		  "            }",
		  "        }",
		  "    }",
		  "    end {",
		  "        if (\\$MeasureTime) {",
		  "            \\$FuncEndTime = Get-Date",
		  "            Write-Verbose -Message \"Function run time: \\$((New-TimeSpan -Start \\$FuncStartTime -End \\$FuncEndTime).TotalSeconds) seconds\"",
		  "            Write-Verbose -Message \"Function end time: \\$(Get-Date -Date \\$FuncEndTime -Format FileDateTimeUniversal)\"",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "Blank function"
	  },

	  "Array lists": {
		"prefix": "arraylist",
		"body": [
		  "\\$ArrayGenList = New-Object -TypeName System.Collections.Generic.List[psobject] # [pscustomobject] [string]",
		  "\\$ArrayGenList.Add(\\$Var)",
		  "",
		  "\\$ArrayList = New-Object -TypeName System.Collections.ArrayList",
		  "\\$ArrayList.Add(\\$Var)"
		],
		"description": "Array lists"
	  }
}